def solution(numbers, hand):
    answer = ''
    left_position = 10
    right_position = 12
    
    for i in numbers:
        if i == 1 or i == 4 or i == 7:
            answer += 'L'
            left_position = i
        elif i == 3 or i == 6 or i == 9:
            answer += 'R'
            right_position = i
        else:
            if i == 0:
                i = 11
            answer += abs_diff(i,left_position, right_position,hand)
            if answer[-1] == 'L':
                left_position = i
            else:
                right_position = i
                
    return answer


def abs_diff(i, left_position, right_position, hand):
    diff = []
    priority = []
    diff.append(abs(i - left_position))
    diff.append(abs(i - right_position))
    # this makes diff=[left_diff, right_diff]

    if hand == 'right':
        hand_alphabet = 'R'
    else:
        hand_alphabet = 'L'
    
    
    for i in diff:
        if i == 1 or i == 3:
            priority.append(1)
        elif i == 2 or i == 4:
            priority.append(2)
        elif i == 6:
            priority.append(3)
        elif i == 5 or i == 7:
            priority.append(4)
        elif i == 9:
            priority.append(5)
        elif i == 8 or i == 10:
            priority.append(6)
        else:
            priority.append(7)
            
    if priority[0] < priority[1]:
        return 'L'
    elif priority[0] > priority[1]:
        return 'R'
    else:
        return hand_alphabet
       
------ 까지 1차 실패한 코드 -------  
ㄴ 대각선 길이까지 생각해보려다가 실패함, 문제를 다시 한번 자세히 읽어보니 가로세로 차이값의 합인 것 같았다.
아래는 새로 혼자 짜볼 코드.

def solution(numbers, hand):
    answer = ''
    Lpos = [0,3]
    Rpos = [2,3]
    key_dict = {1:[0,0], 2:[1,0], 3:[2,0],
                4:[0,1], 5:[1,1], 6:[2,1],
                7:[0,2], 8:[1,2], 9:[2,2],
                         0:[1,3]}
    
    for i in numbers:
        if i == 1 or i == 4 or i == 7:
            answer += 'L'
            Lpos = key_dict[i]
        elif i == 3 or i == 6 or i == 9:
            answer += 'R'
            Rpos = key_dict[i]
        else:
            Ldist = abs(Lpos[0]-key_dict[i][0]) + abs(Lpos[1]-key_dict[i][1]) 
            Rdist = abs(Rpos[0]-key_dict[i][0]) + abs(Rpos[1]-key_dict[i][1])
            if Ldist < Rdist:
                answer += 'L'
                Lpos = key_dict[i]
            elif Ldist > Rdist:
                answer += 'R'
                Rpos = key_dict[i]
            else:
                if hand == 'left':
                    answer += 'L'
                    Lpos = key_dict[i]
                else:
                    answer += 'R'
                    Rpos = key_dict[i]
                    
                
    return answer
